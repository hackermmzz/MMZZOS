
build/test.bin：     文件格式 elf32-i386


Disassembly of section .text:

08060000 <_start>:
 8060000:	53                   	push   %ebx
 8060001:	51                   	push   %ecx
 8060002:	e8 00 00 00 00       	call   8060007 <main>

08060007 <main>:
 8060007:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 806000b:	83 e4 f0             	and    $0xfffffff0,%esp
 806000e:	ff 71 fc             	push   -0x4(%ecx)
 8060011:	55                   	push   %ebp
 8060012:	89 e5                	mov    %esp,%ebp
 8060014:	56                   	push   %esi
 8060015:	53                   	push   %ebx
 8060016:	51                   	push   %ecx
 8060017:	83 ec 1c             	sub    $0x1c,%esp
 806001a:	e8 72 00 00 00       	call   8060091 <__x86.get_pc_thunk.bx>
 806001f:	81 c3 d5 2f 00 00    	add    $0x2fd5,%ebx
 8060025:	89 ce                	mov    %ecx,%esi
 8060027:	8d 83 0c e0 ff ff    	lea    -0x1ff4(%ebx),%eax
 806002d:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8060030:	83 ec 04             	sub    $0x4,%esp
 8060033:	6a 0b                	push   $0xb
 8060035:	ff 75 e0             	push   -0x20(%ebp)
 8060038:	6a 00                	push   $0x0
 806003a:	e8 05 01 00 00       	call   8060144 <write>
 806003f:	83 c4 10             	add    $0x10,%esp
 8060042:	83 ec 08             	sub    $0x8,%esp
 8060045:	ff 36                	push   (%esi)
 8060047:	8d 83 18 e0 ff ff    	lea    -0x1fe8(%ebx),%eax
 806004d:	50                   	push   %eax
 806004e:	e8 7a 09 00 00       	call   80609cd <printf>
 8060053:	83 c4 10             	add    $0x10,%esp
 8060056:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 806005d:	eb 28                	jmp    8060087 <main+0x80>
 806005f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060062:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8060069:	8b 46 04             	mov    0x4(%esi),%eax
 806006c:	01 d0                	add    %edx,%eax
 806006e:	8b 00                	mov    (%eax),%eax
 8060070:	83 ec 08             	sub    $0x8,%esp
 8060073:	50                   	push   %eax
 8060074:	8d 83 22 e0 ff ff    	lea    -0x1fde(%ebx),%eax
 806007a:	50                   	push   %eax
 806007b:	e8 4d 09 00 00       	call   80609cd <printf>
 8060080:	83 c4 10             	add    $0x10,%esp
 8060083:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 8060087:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806008a:	3b 06                	cmp    (%esi),%eax
 806008c:	7c d1                	jl     806005f <main+0x58>
 806008e:	90                   	nop
 806008f:	eb fd                	jmp    806008e <main+0x87>

08060091 <__x86.get_pc_thunk.bx>:
 8060091:	8b 1c 24             	mov    (%esp),%ebx
 8060094:	c3                   	ret

08060095 <Syscall0>:
 8060095:	55                   	push   %ebp
 8060096:	89 e5                	mov    %esp,%ebp
 8060098:	83 ec 10             	sub    $0x10,%esp
 806009b:	e8 3e 03 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80600a0:	05 54 2f 00 00       	add    $0x2f54,%eax
 80600a5:	8b 45 08             	mov    0x8(%ebp),%eax
 80600a8:	cd 80                	int    $0x80
 80600aa:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80600ad:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80600b0:	c9                   	leave
 80600b1:	c3                   	ret

080600b2 <Syscall1>:
 80600b2:	55                   	push   %ebp
 80600b3:	89 e5                	mov    %esp,%ebp
 80600b5:	53                   	push   %ebx
 80600b6:	83 ec 10             	sub    $0x10,%esp
 80600b9:	e8 20 03 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80600be:	05 36 2f 00 00       	add    $0x2f36,%eax
 80600c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80600c6:	8b 55 0c             	mov    0xc(%ebp),%edx
 80600c9:	89 d3                	mov    %edx,%ebx
 80600cb:	cd 80                	int    $0x80
 80600cd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80600d0:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80600d3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80600d6:	c9                   	leave
 80600d7:	c3                   	ret

080600d8 <Syscall2>:
 80600d8:	55                   	push   %ebp
 80600d9:	89 e5                	mov    %esp,%ebp
 80600db:	53                   	push   %ebx
 80600dc:	83 ec 10             	sub    $0x10,%esp
 80600df:	e8 fa 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80600e4:	05 10 2f 00 00       	add    $0x2f10,%eax
 80600e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80600ec:	8b 55 0c             	mov    0xc(%ebp),%edx
 80600ef:	8b 4d 10             	mov    0x10(%ebp),%ecx
 80600f2:	89 d3                	mov    %edx,%ebx
 80600f4:	cd 80                	int    $0x80
 80600f6:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80600f9:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80600fc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80600ff:	c9                   	leave
 8060100:	c3                   	ret

08060101 <Syscall3>:
 8060101:	55                   	push   %ebp
 8060102:	89 e5                	mov    %esp,%ebp
 8060104:	53                   	push   %ebx
 8060105:	83 ec 10             	sub    $0x10,%esp
 8060108:	e8 d1 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806010d:	05 e7 2e 00 00       	add    $0x2ee7,%eax
 8060112:	8b 45 08             	mov    0x8(%ebp),%eax
 8060115:	8b 5d 0c             	mov    0xc(%ebp),%ebx
 8060118:	8b 4d 10             	mov    0x10(%ebp),%ecx
 806011b:	8b 55 14             	mov    0x14(%ebp),%edx
 806011e:	cd 80                	int    $0x80
 8060120:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8060123:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8060126:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8060129:	c9                   	leave
 806012a:	c3                   	ret

0806012b <getpid>:
 806012b:	55                   	push   %ebp
 806012c:	89 e5                	mov    %esp,%ebp
 806012e:	e8 ab 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060133:	05 c1 2e 00 00       	add    $0x2ec1,%eax
 8060138:	6a 00                	push   $0x0
 806013a:	e8 56 ff ff ff       	call   8060095 <Syscall0>
 806013f:	83 c4 04             	add    $0x4,%esp
 8060142:	c9                   	leave
 8060143:	c3                   	ret

08060144 <write>:
 8060144:	55                   	push   %ebp
 8060145:	89 e5                	mov    %esp,%ebp
 8060147:	e8 92 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806014c:	05 a8 2e 00 00       	add    $0x2ea8,%eax
 8060151:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8060154:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060157:	8b 45 08             	mov    0x8(%ebp),%eax
 806015a:	51                   	push   %ecx
 806015b:	52                   	push   %edx
 806015c:	50                   	push   %eax
 806015d:	6a 06                	push   $0x6
 806015f:	e8 9d ff ff ff       	call   8060101 <Syscall3>
 8060164:	83 c4 10             	add    $0x10,%esp
 8060167:	c9                   	leave
 8060168:	c3                   	ret

08060169 <read>:
 8060169:	55                   	push   %ebp
 806016a:	89 e5                	mov    %esp,%ebp
 806016c:	e8 6d 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060171:	05 83 2e 00 00       	add    $0x2e83,%eax
 8060176:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8060179:	8b 55 0c             	mov    0xc(%ebp),%edx
 806017c:	8b 45 08             	mov    0x8(%ebp),%eax
 806017f:	51                   	push   %ecx
 8060180:	52                   	push   %edx
 8060181:	50                   	push   %eax
 8060182:	6a 02                	push   $0x2
 8060184:	e8 78 ff ff ff       	call   8060101 <Syscall3>
 8060189:	83 c4 10             	add    $0x10,%esp
 806018c:	c9                   	leave
 806018d:	c3                   	ret

0806018e <malloc>:
 806018e:	55                   	push   %ebp
 806018f:	89 e5                	mov    %esp,%ebp
 8060191:	e8 48 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060196:	05 5e 2e 00 00       	add    $0x2e5e,%eax
 806019b:	8b 45 08             	mov    0x8(%ebp),%eax
 806019e:	50                   	push   %eax
 806019f:	6a 07                	push   $0x7
 80601a1:	e8 0c ff ff ff       	call   80600b2 <Syscall1>
 80601a6:	83 c4 08             	add    $0x8,%esp
 80601a9:	c9                   	leave
 80601aa:	c3                   	ret

080601ab <free>:
 80601ab:	55                   	push   %ebp
 80601ac:	89 e5                	mov    %esp,%ebp
 80601ae:	e8 2b 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80601b3:	05 41 2e 00 00       	add    $0x2e41,%eax
 80601b8:	8b 45 08             	mov    0x8(%ebp),%eax
 80601bb:	50                   	push   %eax
 80601bc:	6a 08                	push   $0x8
 80601be:	e8 ef fe ff ff       	call   80600b2 <Syscall1>
 80601c3:	83 c4 08             	add    $0x8,%esp
 80601c6:	90                   	nop
 80601c7:	c9                   	leave
 80601c8:	c3                   	ret

080601c9 <sleep>:
 80601c9:	55                   	push   %ebp
 80601ca:	89 e5                	mov    %esp,%ebp
 80601cc:	e8 0d 02 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80601d1:	05 23 2e 00 00       	add    $0x2e23,%eax
 80601d6:	8b 45 08             	mov    0x8(%ebp),%eax
 80601d9:	50                   	push   %eax
 80601da:	6a 09                	push   $0x9
 80601dc:	e8 d1 fe ff ff       	call   80600b2 <Syscall1>
 80601e1:	83 c4 08             	add    $0x8,%esp
 80601e4:	c9                   	leave
 80601e5:	c3                   	ret

080601e6 <open>:
 80601e6:	55                   	push   %ebp
 80601e7:	89 e5                	mov    %esp,%ebp
 80601e9:	83 ec 04             	sub    $0x4,%esp
 80601ec:	e8 ed 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80601f1:	05 03 2e 00 00       	add    $0x2e03,%eax
 80601f6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80601f9:	88 45 fc             	mov    %al,-0x4(%ebp)
 80601fc:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
 8060200:	8b 45 08             	mov    0x8(%ebp),%eax
 8060203:	52                   	push   %edx
 8060204:	50                   	push   %eax
 8060205:	6a 01                	push   $0x1
 8060207:	e8 cc fe ff ff       	call   80600d8 <Syscall2>
 806020c:	83 c4 0c             	add    $0xc,%esp
 806020f:	c9                   	leave
 8060210:	c3                   	ret

08060211 <close>:
 8060211:	55                   	push   %ebp
 8060212:	89 e5                	mov    %esp,%ebp
 8060214:	e8 c5 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060219:	05 db 2d 00 00       	add    $0x2ddb,%eax
 806021e:	ff 75 08             	push   0x8(%ebp)
 8060221:	6a 03                	push   $0x3
 8060223:	e8 8a fe ff ff       	call   80600b2 <Syscall1>
 8060228:	83 c4 08             	add    $0x8,%esp
 806022b:	c9                   	leave
 806022c:	c3                   	ret

0806022d <seek>:
 806022d:	55                   	push   %ebp
 806022e:	89 e5                	mov    %esp,%ebp
 8060230:	83 ec 04             	sub    $0x4,%esp
 8060233:	e8 a6 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060238:	05 bc 2d 00 00       	add    $0x2dbc,%eax
 806023d:	8b 45 10             	mov    0x10(%ebp),%eax
 8060240:	88 45 fc             	mov    %al,-0x4(%ebp)
 8060243:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 8060247:	50                   	push   %eax
 8060248:	ff 75 0c             	push   0xc(%ebp)
 806024b:	ff 75 08             	push   0x8(%ebp)
 806024e:	6a 04                	push   $0x4
 8060250:	e8 ac fe ff ff       	call   8060101 <Syscall3>
 8060255:	83 c4 10             	add    $0x10,%esp
 8060258:	c9                   	leave
 8060259:	c3                   	ret

0806025a <unlink>:
 806025a:	55                   	push   %ebp
 806025b:	89 e5                	mov    %esp,%ebp
 806025d:	e8 7c 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060262:	05 92 2d 00 00       	add    $0x2d92,%eax
 8060267:	8b 45 08             	mov    0x8(%ebp),%eax
 806026a:	50                   	push   %eax
 806026b:	6a 05                	push   $0x5
 806026d:	e8 40 fe ff ff       	call   80600b2 <Syscall1>
 8060272:	83 c4 08             	add    $0x8,%esp
 8060275:	c9                   	leave
 8060276:	c3                   	ret

08060277 <mkdir>:
 8060277:	55                   	push   %ebp
 8060278:	89 e5                	mov    %esp,%ebp
 806027a:	e8 5f 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806027f:	05 75 2d 00 00       	add    $0x2d75,%eax
 8060284:	8b 45 08             	mov    0x8(%ebp),%eax
 8060287:	50                   	push   %eax
 8060288:	6a 0a                	push   $0xa
 806028a:	e8 23 fe ff ff       	call   80600b2 <Syscall1>
 806028f:	83 c4 08             	add    $0x8,%esp
 8060292:	c9                   	leave
 8060293:	c3                   	ret

08060294 <opendir>:
 8060294:	55                   	push   %ebp
 8060295:	89 e5                	mov    %esp,%ebp
 8060297:	e8 42 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806029c:	05 58 2d 00 00       	add    $0x2d58,%eax
 80602a1:	8b 45 08             	mov    0x8(%ebp),%eax
 80602a4:	50                   	push   %eax
 80602a5:	6a 0b                	push   $0xb
 80602a7:	e8 06 fe ff ff       	call   80600b2 <Syscall1>
 80602ac:	83 c4 08             	add    $0x8,%esp
 80602af:	c9                   	leave
 80602b0:	c3                   	ret

080602b1 <closedir>:
 80602b1:	55                   	push   %ebp
 80602b2:	89 e5                	mov    %esp,%ebp
 80602b4:	e8 25 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80602b9:	05 3b 2d 00 00       	add    $0x2d3b,%eax
 80602be:	8b 45 08             	mov    0x8(%ebp),%eax
 80602c1:	50                   	push   %eax
 80602c2:	6a 0c                	push   $0xc
 80602c4:	e8 e9 fd ff ff       	call   80600b2 <Syscall1>
 80602c9:	83 c4 08             	add    $0x8,%esp
 80602cc:	c9                   	leave
 80602cd:	c3                   	ret

080602ce <rewinddir>:
 80602ce:	55                   	push   %ebp
 80602cf:	89 e5                	mov    %esp,%ebp
 80602d1:	e8 08 01 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80602d6:	05 1e 2d 00 00       	add    $0x2d1e,%eax
 80602db:	8b 45 08             	mov    0x8(%ebp),%eax
 80602de:	50                   	push   %eax
 80602df:	6a 0d                	push   $0xd
 80602e1:	e8 cc fd ff ff       	call   80600b2 <Syscall1>
 80602e6:	83 c4 08             	add    $0x8,%esp
 80602e9:	c9                   	leave
 80602ea:	c3                   	ret

080602eb <readdir>:
 80602eb:	55                   	push   %ebp
 80602ec:	89 e5                	mov    %esp,%ebp
 80602ee:	e8 eb 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80602f3:	05 01 2d 00 00       	add    $0x2d01,%eax
 80602f8:	8b 45 08             	mov    0x8(%ebp),%eax
 80602fb:	50                   	push   %eax
 80602fc:	6a 0e                	push   $0xe
 80602fe:	e8 af fd ff ff       	call   80600b2 <Syscall1>
 8060303:	83 c4 08             	add    $0x8,%esp
 8060306:	c9                   	leave
 8060307:	c3                   	ret

08060308 <rmdir>:
 8060308:	55                   	push   %ebp
 8060309:	89 e5                	mov    %esp,%ebp
 806030b:	e8 ce 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 8060310:	05 e4 2c 00 00       	add    $0x2ce4,%eax
 8060315:	8b 45 08             	mov    0x8(%ebp),%eax
 8060318:	50                   	push   %eax
 8060319:	6a 0f                	push   $0xf
 806031b:	e8 92 fd ff ff       	call   80600b2 <Syscall1>
 8060320:	83 c4 08             	add    $0x8,%esp
 8060323:	c9                   	leave
 8060324:	c3                   	ret

08060325 <getcwd>:
 8060325:	55                   	push   %ebp
 8060326:	89 e5                	mov    %esp,%ebp
 8060328:	e8 b1 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806032d:	05 c7 2c 00 00       	add    $0x2cc7,%eax
 8060332:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060335:	8b 45 08             	mov    0x8(%ebp),%eax
 8060338:	52                   	push   %edx
 8060339:	50                   	push   %eax
 806033a:	6a 10                	push   $0x10
 806033c:	e8 97 fd ff ff       	call   80600d8 <Syscall2>
 8060341:	83 c4 0c             	add    $0xc,%esp
 8060344:	c9                   	leave
 8060345:	c3                   	ret

08060346 <chdir>:
 8060346:	55                   	push   %ebp
 8060347:	89 e5                	mov    %esp,%ebp
 8060349:	e8 90 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806034e:	05 a6 2c 00 00       	add    $0x2ca6,%eax
 8060353:	8b 45 08             	mov    0x8(%ebp),%eax
 8060356:	50                   	push   %eax
 8060357:	6a 11                	push   $0x11
 8060359:	e8 54 fd ff ff       	call   80600b2 <Syscall1>
 806035e:	83 c4 08             	add    $0x8,%esp
 8060361:	c9                   	leave
 8060362:	c3                   	ret

08060363 <stat>:
 8060363:	55                   	push   %ebp
 8060364:	89 e5                	mov    %esp,%ebp
 8060366:	e8 73 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806036b:	05 89 2c 00 00       	add    $0x2c89,%eax
 8060370:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060373:	8b 45 08             	mov    0x8(%ebp),%eax
 8060376:	52                   	push   %edx
 8060377:	50                   	push   %eax
 8060378:	6a 12                	push   $0x12
 806037a:	e8 59 fd ff ff       	call   80600d8 <Syscall2>
 806037f:	83 c4 0c             	add    $0xc,%esp
 8060382:	c9                   	leave
 8060383:	c3                   	ret

08060384 <clear>:
 8060384:	55                   	push   %ebp
 8060385:	89 e5                	mov    %esp,%ebp
 8060387:	e8 52 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 806038c:	05 68 2c 00 00       	add    $0x2c68,%eax
 8060391:	6a 14                	push   $0x14
 8060393:	e8 fd fc ff ff       	call   8060095 <Syscall0>
 8060398:	83 c4 04             	add    $0x4,%esp
 806039b:	c9                   	leave
 806039c:	c3                   	ret

0806039d <ps>:
 806039d:	55                   	push   %ebp
 806039e:	89 e5                	mov    %esp,%ebp
 80603a0:	e8 39 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80603a5:	05 4f 2c 00 00       	add    $0x2c4f,%eax
 80603aa:	8b 45 08             	mov    0x8(%ebp),%eax
 80603ad:	50                   	push   %eax
 80603ae:	6a 15                	push   $0x15
 80603b0:	e8 fd fc ff ff       	call   80600b2 <Syscall1>
 80603b5:	83 c4 08             	add    $0x8,%esp
 80603b8:	c9                   	leave
 80603b9:	c3                   	ret

080603ba <exec>:
 80603ba:	55                   	push   %ebp
 80603bb:	89 e5                	mov    %esp,%ebp
 80603bd:	e8 1c 00 00 00       	call   80603de <__x86.get_pc_thunk.ax>
 80603c2:	05 32 2c 00 00       	add    $0x2c32,%eax
 80603c7:	8b 55 10             	mov    0x10(%ebp),%edx
 80603ca:	8b 45 08             	mov    0x8(%ebp),%eax
 80603cd:	52                   	push   %edx
 80603ce:	ff 75 0c             	push   0xc(%ebp)
 80603d1:	50                   	push   %eax
 80603d2:	6a 16                	push   $0x16
 80603d4:	e8 28 fd ff ff       	call   8060101 <Syscall3>
 80603d9:	83 c4 10             	add    $0x10,%esp
 80603dc:	c9                   	leave
 80603dd:	c3                   	ret

080603de <__x86.get_pc_thunk.ax>:
 80603de:	8b 04 24             	mov    (%esp),%eax
 80603e1:	c3                   	ret

080603e2 <strlen>:
 80603e2:	55                   	push   %ebp
 80603e3:	89 e5                	mov    %esp,%ebp
 80603e5:	83 ec 10             	sub    $0x10,%esp
 80603e8:	e8 f1 ff ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 80603ed:	05 07 2c 00 00       	add    $0x2c07,%eax
 80603f2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80603f9:	eb 08                	jmp    8060403 <strlen+0x21>
 80603fb:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80603ff:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 8060403:	8b 45 08             	mov    0x8(%ebp),%eax
 8060406:	0f b6 00             	movzbl (%eax),%eax
 8060409:	84 c0                	test   %al,%al
 806040b:	75 ee                	jne    80603fb <strlen+0x19>
 806040d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8060410:	c9                   	leave
 8060411:	c3                   	ret

08060412 <strcpy>:
 8060412:	55                   	push   %ebp
 8060413:	89 e5                	mov    %esp,%ebp
 8060415:	e8 c4 ff ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 806041a:	05 da 2b 00 00       	add    $0x2bda,%eax
 806041f:	eb 13                	jmp    8060434 <strcpy+0x22>
 8060421:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060424:	0f b6 10             	movzbl (%eax),%edx
 8060427:	8b 45 08             	mov    0x8(%ebp),%eax
 806042a:	88 10                	mov    %dl,(%eax)
 806042c:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 8060430:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 8060434:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060437:	0f b6 00             	movzbl (%eax),%eax
 806043a:	84 c0                	test   %al,%al
 806043c:	75 e3                	jne    8060421 <strcpy+0xf>
 806043e:	8b 45 08             	mov    0x8(%ebp),%eax
 8060441:	c6 00 00             	movb   $0x0,(%eax)
 8060444:	8b 45 08             	mov    0x8(%ebp),%eax
 8060447:	5d                   	pop    %ebp
 8060448:	c3                   	ret

08060449 <strcat>:
 8060449:	55                   	push   %ebp
 806044a:	89 e5                	mov    %esp,%ebp
 806044c:	83 ec 10             	sub    $0x10,%esp
 806044f:	e8 8a ff ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 8060454:	05 a0 2b 00 00       	add    $0x2ba0,%eax
 8060459:	ff 75 08             	push   0x8(%ebp)
 806045c:	e8 81 ff ff ff       	call   80603e2 <strlen>
 8060461:	83 c4 04             	add    $0x4,%esp
 8060464:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8060467:	8b 45 fc             	mov    -0x4(%ebp),%eax
 806046a:	01 45 08             	add    %eax,0x8(%ebp)
 806046d:	eb 13                	jmp    8060482 <strcat+0x39>
 806046f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060472:	0f b6 10             	movzbl (%eax),%edx
 8060475:	8b 45 08             	mov    0x8(%ebp),%eax
 8060478:	88 10                	mov    %dl,(%eax)
 806047a:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 806047e:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 8060482:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060485:	0f b6 00             	movzbl (%eax),%eax
 8060488:	84 c0                	test   %al,%al
 806048a:	75 e3                	jne    806046f <strcat+0x26>
 806048c:	8b 45 08             	mov    0x8(%ebp),%eax
 806048f:	c6 00 00             	movb   $0x0,(%eax)
 8060492:	8b 45 08             	mov    0x8(%ebp),%eax
 8060495:	c9                   	leave
 8060496:	c3                   	ret

08060497 <strcmp>:
 8060497:	55                   	push   %ebp
 8060498:	89 e5                	mov    %esp,%ebp
 806049a:	e8 3f ff ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 806049f:	05 55 2b 00 00       	add    $0x2b55,%eax
 80604a4:	eb 36                	jmp    80604dc <strcmp+0x45>
 80604a6:	8b 45 08             	mov    0x8(%ebp),%eax
 80604a9:	0f b6 10             	movzbl (%eax),%edx
 80604ac:	8b 45 0c             	mov    0xc(%ebp),%eax
 80604af:	0f b6 00             	movzbl (%eax),%eax
 80604b2:	38 c2                	cmp    %al,%dl
 80604b4:	7d 07                	jge    80604bd <strcmp+0x26>
 80604b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80604bb:	eb 64                	jmp    8060521 <strcmp+0x8a>
 80604bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80604c0:	0f b6 10             	movzbl (%eax),%edx
 80604c3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80604c6:	0f b6 00             	movzbl (%eax),%eax
 80604c9:	38 c2                	cmp    %al,%dl
 80604cb:	7e 07                	jle    80604d4 <strcmp+0x3d>
 80604cd:	b8 01 00 00 00       	mov    $0x1,%eax
 80604d2:	eb 4d                	jmp    8060521 <strcmp+0x8a>
 80604d4:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 80604d8:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 80604dc:	8b 45 08             	mov    0x8(%ebp),%eax
 80604df:	0f b6 00             	movzbl (%eax),%eax
 80604e2:	84 c0                	test   %al,%al
 80604e4:	74 0a                	je     80604f0 <strcmp+0x59>
 80604e6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80604e9:	0f b6 00             	movzbl (%eax),%eax
 80604ec:	84 c0                	test   %al,%al
 80604ee:	75 b6                	jne    80604a6 <strcmp+0xf>
 80604f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80604f3:	0f b6 00             	movzbl (%eax),%eax
 80604f6:	84 c0                	test   %al,%al
 80604f8:	75 11                	jne    806050b <strcmp+0x74>
 80604fa:	8b 45 0c             	mov    0xc(%ebp),%eax
 80604fd:	0f b6 00             	movzbl (%eax),%eax
 8060500:	84 c0                	test   %al,%al
 8060502:	75 07                	jne    806050b <strcmp+0x74>
 8060504:	b8 00 00 00 00       	mov    $0x0,%eax
 8060509:	eb 16                	jmp    8060521 <strcmp+0x8a>
 806050b:	8b 45 08             	mov    0x8(%ebp),%eax
 806050e:	0f b6 00             	movzbl (%eax),%eax
 8060511:	84 c0                	test   %al,%al
 8060513:	74 07                	je     806051c <strcmp+0x85>
 8060515:	b8 01 00 00 00       	mov    $0x1,%eax
 806051a:	eb 05                	jmp    8060521 <strcmp+0x8a>
 806051c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8060521:	5d                   	pop    %ebp
 8060522:	c3                   	ret

08060523 <reverse>:
 8060523:	55                   	push   %ebp
 8060524:	89 e5                	mov    %esp,%ebp
 8060526:	83 ec 10             	sub    $0x10,%esp
 8060529:	e8 b0 fe ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 806052e:	05 c6 2a 00 00       	add    $0x2ac6,%eax
 8060533:	ff 75 08             	push   0x8(%ebp)
 8060536:	e8 a7 fe ff ff       	call   80603e2 <strlen>
 806053b:	83 c4 04             	add    $0x4,%esp
 806053e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060541:	8b 45 08             	mov    0x8(%ebp),%eax
 8060544:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8060547:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806054a:	8d 50 ff             	lea    -0x1(%eax),%edx
 806054d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060550:	01 d0                	add    %edx,%eax
 8060552:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8060555:	eb 25                	jmp    806057c <reverse+0x59>
 8060557:	8b 45 fc             	mov    -0x4(%ebp),%eax
 806055a:	0f b6 00             	movzbl (%eax),%eax
 806055d:	88 45 f3             	mov    %al,-0xd(%ebp)
 8060560:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8060563:	0f b6 10             	movzbl (%eax),%edx
 8060566:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8060569:	88 10                	mov    %dl,(%eax)
 806056b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 806056e:	0f b6 55 f3          	movzbl -0xd(%ebp),%edx
 8060572:	88 10                	mov    %dl,(%eax)
 8060574:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8060578:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
 806057c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 806057f:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 8060582:	72 d3                	jb     8060557 <reverse+0x34>
 8060584:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8060587:	8b 45 08             	mov    0x8(%ebp),%eax
 806058a:	01 d0                	add    %edx,%eax
 806058c:	c6 00 00             	movb   $0x0,(%eax)
 806058f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060592:	c9                   	leave
 8060593:	c3                   	ret

08060594 <memset>:
 8060594:	55                   	push   %ebp
 8060595:	89 e5                	mov    %esp,%ebp
 8060597:	83 ec 10             	sub    $0x10,%esp
 806059a:	e8 3f fe ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 806059f:	05 55 2a 00 00       	add    $0x2a55,%eax
 80605a4:	81 65 0c ff 00 00 00 	andl   $0xff,0xc(%ebp)
 80605ab:	8b 45 0c             	mov    0xc(%ebp),%eax
 80605ae:	88 45 fb             	mov    %al,-0x5(%ebp)
 80605b1:	eb 11                	jmp    80605c4 <memset+0x30>
 80605b3:	8b 45 08             	mov    0x8(%ebp),%eax
 80605b6:	0f b6 55 fb          	movzbl -0x5(%ebp),%edx
 80605ba:	88 10                	mov    %dl,(%eax)
 80605bc:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 80605c0:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 80605c4:	8b 45 08             	mov    0x8(%ebp),%eax
 80605c7:	83 e0 03             	and    $0x3,%eax
 80605ca:	85 c0                	test   %eax,%eax
 80605cc:	74 06                	je     80605d4 <memset+0x40>
 80605ce:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 80605d2:	75 df                	jne    80605b3 <memset+0x1f>
 80605d4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80605d7:	c1 e0 18             	shl    $0x18,%eax
 80605da:	89 c2                	mov    %eax,%edx
 80605dc:	8b 45 0c             	mov    0xc(%ebp),%eax
 80605df:	c1 e0 10             	shl    $0x10,%eax
 80605e2:	09 c2                	or     %eax,%edx
 80605e4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80605e7:	c1 e0 08             	shl    $0x8,%eax
 80605ea:	09 d0                	or     %edx,%eax
 80605ec:	0b 45 0c             	or     0xc(%ebp),%eax
 80605ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80605f2:	8b 45 08             	mov    0x8(%ebp),%eax
 80605f5:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80605f8:	eb 10                	jmp    806060a <memset+0x76>
 80605fa:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80605fd:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8060600:	89 10                	mov    %edx,(%eax)
 8060602:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
 8060606:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
 806060a:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
 806060e:	77 ea                	ja     80605fa <memset+0x66>
 8060610:	eb 11                	jmp    8060623 <memset+0x8f>
 8060612:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8060615:	0f b6 55 fb          	movzbl -0x5(%ebp),%edx
 8060619:	88 10                	mov    %dl,(%eax)
 806061b:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 806061f:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 8060623:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8060627:	75 e9                	jne    8060612 <memset+0x7e>
 8060629:	b8 00 00 00 00       	mov    $0x0,%eax
 806062e:	c9                   	leave
 806062f:	c3                   	ret

08060630 <memcpy>:
 8060630:	55                   	push   %ebp
 8060631:	89 e5                	mov    %esp,%ebp
 8060633:	83 ec 10             	sub    $0x10,%esp
 8060636:	e8 a3 fd ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 806063b:	05 b9 29 00 00       	add    $0x29b9,%eax
 8060640:	8b 55 08             	mov    0x8(%ebp),%edx
 8060643:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060646:	31 d0                	xor    %edx,%eax
 8060648:	83 e0 03             	and    $0x3,%eax
 806064b:	85 c0                	test   %eax,%eax
 806064d:	74 3e                	je     806068d <memcpy+0x5d>
 806064f:	eb 13                	jmp    8060664 <memcpy+0x34>
 8060651:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060654:	0f b6 10             	movzbl (%eax),%edx
 8060657:	8b 45 08             	mov    0x8(%ebp),%eax
 806065a:	88 10                	mov    %dl,(%eax)
 806065c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 8060660:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 8060664:	8b 45 10             	mov    0x10(%ebp),%eax
 8060667:	8d 50 ff             	lea    -0x1(%eax),%edx
 806066a:	89 55 10             	mov    %edx,0x10(%ebp)
 806066d:	85 c0                	test   %eax,%eax
 806066f:	75 e0                	jne    8060651 <memcpy+0x21>
 8060671:	8b 45 08             	mov    0x8(%ebp),%eax
 8060674:	eb 73                	jmp    80606e9 <memcpy+0xb9>
 8060676:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060679:	0f b6 10             	movzbl (%eax),%edx
 806067c:	8b 45 08             	mov    0x8(%ebp),%eax
 806067f:	88 10                	mov    %dl,(%eax)
 8060681:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 8060685:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 8060689:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 806068d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060690:	83 e0 03             	and    $0x3,%eax
 8060693:	85 c0                	test   %eax,%eax
 8060695:	74 06                	je     806069d <memcpy+0x6d>
 8060697:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 806069b:	75 d9                	jne    8060676 <memcpy+0x46>
 806069d:	8b 45 08             	mov    0x8(%ebp),%eax
 80606a0:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80606a3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80606a6:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80606a9:	eb 16                	jmp    80606c1 <memcpy+0x91>
 80606ab:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80606ae:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80606b1:	8b 12                	mov    (%edx),%edx
 80606b3:	89 10                	mov    %edx,(%eax)
 80606b5:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
 80606b9:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
 80606bd:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
 80606c1:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
 80606c5:	77 e4                	ja     80606ab <memcpy+0x7b>
 80606c7:	eb 17                	jmp    80606e0 <memcpy+0xb0>
 80606c9:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80606cc:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80606cf:	0f b6 12             	movzbl (%edx),%edx
 80606d2:	88 10                	mov    %dl,(%eax)
 80606d4:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80606d8:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80606dc:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 80606e0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 80606e4:	75 e3                	jne    80606c9 <memcpy+0x99>
 80606e6:	8b 45 08             	mov    0x8(%ebp),%eax
 80606e9:	c9                   	leave
 80606ea:	c3                   	ret

080606eb <memcmp>:
 80606eb:	55                   	push   %ebp
 80606ec:	89 e5                	mov    %esp,%ebp
 80606ee:	83 ec 10             	sub    $0x10,%esp
 80606f1:	e8 e8 fc ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 80606f6:	05 fe 28 00 00       	add    $0x28fe,%eax
 80606fb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8060702:	eb 36                	jmp    806073a <memcmp+0x4f>
 8060704:	8b 45 08             	mov    0x8(%ebp),%eax
 8060707:	0f b6 00             	movzbl (%eax),%eax
 806070a:	88 45 fb             	mov    %al,-0x5(%ebp)
 806070d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060710:	0f b6 00             	movzbl (%eax),%eax
 8060713:	88 45 fa             	mov    %al,-0x6(%ebp)
 8060716:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 806071a:	3a 45 fa             	cmp    -0x6(%ebp),%al
 806071d:	73 07                	jae    8060726 <memcmp+0x3b>
 806071f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8060724:	eb 21                	jmp    8060747 <memcmp+0x5c>
 8060726:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 806072a:	38 45 fa             	cmp    %al,-0x6(%ebp)
 806072d:	73 07                	jae    8060736 <memcmp+0x4b>
 806072f:	b8 01 00 00 00       	mov    $0x1,%eax
 8060734:	eb 11                	jmp    8060747 <memcmp+0x5c>
 8060736:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 806073a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 806073d:	3b 45 10             	cmp    0x10(%ebp),%eax
 8060740:	7c c2                	jl     8060704 <memcmp+0x19>
 8060742:	b8 00 00 00 00       	mov    $0x0,%eax
 8060747:	c9                   	leave
 8060748:	c3                   	ret

08060749 <itoa>:
 8060749:	55                   	push   %ebp
 806074a:	89 e5                	mov    %esp,%ebp
 806074c:	83 ec 18             	sub    $0x18,%esp
 806074f:	e8 8a fc ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 8060754:	05 a0 28 00 00       	add    $0x28a0,%eax
 8060759:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 806075d:	75 17                	jne    8060776 <itoa+0x2d>
 806075f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060762:	8b 00                	mov    (%eax),%eax
 8060764:	c6 00 30             	movb   $0x30,(%eax)
 8060767:	8b 45 0c             	mov    0xc(%ebp),%eax
 806076a:	8b 00                	mov    (%eax),%eax
 806076c:	8d 50 01             	lea    0x1(%eax),%edx
 806076f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060772:	89 10                	mov    %edx,(%eax)
 8060774:	eb 68                	jmp    80607de <itoa+0x95>
 8060776:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8060779:	8b 45 08             	mov    0x8(%ebp),%eax
 806077c:	ba 00 00 00 00       	mov    $0x0,%edx
 8060781:	f7 f1                	div    %ecx
 8060783:	89 d0                	mov    %edx,%eax
 8060785:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060788:	8b 4d 10             	mov    0x10(%ebp),%ecx
 806078b:	8b 45 08             	mov    0x8(%ebp),%eax
 806078e:	ba 00 00 00 00       	mov    $0x0,%edx
 8060793:	f7 f1                	div    %ecx
 8060795:	89 45 08             	mov    %eax,0x8(%ebp)
 8060798:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 806079c:	74 14                	je     80607b2 <itoa+0x69>
 806079e:	83 ec 04             	sub    $0x4,%esp
 80607a1:	ff 75 10             	push   0x10(%ebp)
 80607a4:	ff 75 0c             	push   0xc(%ebp)
 80607a7:	ff 75 08             	push   0x8(%ebp)
 80607aa:	e8 9a ff ff ff       	call   8060749 <itoa>
 80607af:	83 c4 10             	add    $0x10,%esp
 80607b2:	83 7d f4 09          	cmpl   $0x9,-0xc(%ebp)
 80607b6:	7f 0a                	jg     80607c2 <itoa+0x79>
 80607b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80607bb:	83 c0 30             	add    $0x30,%eax
 80607be:	89 c2                	mov    %eax,%edx
 80607c0:	eb 08                	jmp    80607ca <itoa+0x81>
 80607c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80607c5:	83 c0 57             	add    $0x57,%eax
 80607c8:	89 c2                	mov    %eax,%edx
 80607ca:	8b 45 0c             	mov    0xc(%ebp),%eax
 80607cd:	8b 00                	mov    (%eax),%eax
 80607cf:	88 10                	mov    %dl,(%eax)
 80607d1:	8b 45 0c             	mov    0xc(%ebp),%eax
 80607d4:	8b 00                	mov    (%eax),%eax
 80607d6:	8d 50 01             	lea    0x1(%eax),%edx
 80607d9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80607dc:	89 10                	mov    %edx,(%eax)
 80607de:	c9                   	leave
 80607df:	c3                   	ret

080607e0 <vfprintf>:
 80607e0:	55                   	push   %ebp
 80607e1:	89 e5                	mov    %esp,%ebp
 80607e3:	53                   	push   %ebx
 80607e4:	83 ec 24             	sub    $0x24,%esp
 80607e7:	e8 a5 f8 ff ff       	call   8060091 <__x86.get_pc_thunk.bx>
 80607ec:	81 c3 08 28 00 00    	add    $0x2808,%ebx
 80607f2:	8b 45 08             	mov    0x8(%ebp),%eax
 80607f5:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80607f8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80607fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80607fe:	e9 a3 01 00 00       	jmp    80609a6 <vfprintf+0x1c6>
 8060803:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060806:	0f b6 00             	movzbl (%eax),%eax
 8060809:	3c 25                	cmp    $0x25,%al
 806080b:	0f 85 7d 01 00 00    	jne    806098e <vfprintf+0x1ae>
 8060811:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8060815:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060818:	0f b6 00             	movzbl (%eax),%eax
 806081b:	3c 64                	cmp    $0x64,%al
 806081d:	75 40                	jne    806085f <vfprintf+0x7f>
 806081f:	8b 45 10             	mov    0x10(%ebp),%eax
 8060822:	8d 50 04             	lea    0x4(%eax),%edx
 8060825:	89 55 10             	mov    %edx,0x10(%ebp)
 8060828:	8b 00                	mov    (%eax),%eax
 806082a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 806082d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8060831:	79 12                	jns    8060845 <vfprintf+0x65>
 8060833:	8b 45 08             	mov    0x8(%ebp),%eax
 8060836:	c6 00 2d             	movb   $0x2d,(%eax)
 8060839:	8b 45 08             	mov    0x8(%ebp),%eax
 806083c:	83 c0 01             	add    $0x1,%eax
 806083f:	89 45 08             	mov    %eax,0x8(%ebp)
 8060842:	f7 5d f0             	negl   -0x10(%ebp)
 8060845:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060848:	83 ec 04             	sub    $0x4,%esp
 806084b:	6a 0a                	push   $0xa
 806084d:	8d 55 08             	lea    0x8(%ebp),%edx
 8060850:	52                   	push   %edx
 8060851:	50                   	push   %eax
 8060852:	e8 f2 fe ff ff       	call   8060749 <itoa>
 8060857:	83 c4 10             	add    $0x10,%esp
 806085a:	e9 43 01 00 00       	jmp    80609a2 <vfprintf+0x1c2>
 806085f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060862:	0f b6 00             	movzbl (%eax),%eax
 8060865:	3c 78                	cmp    $0x78,%al
 8060867:	75 45                	jne    80608ae <vfprintf+0xce>
 8060869:	8b 45 10             	mov    0x10(%ebp),%eax
 806086c:	8d 50 04             	lea    0x4(%eax),%edx
 806086f:	89 55 10             	mov    %edx,0x10(%ebp)
 8060872:	8b 00                	mov    (%eax),%eax
 8060874:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8060877:	8b 45 08             	mov    0x8(%ebp),%eax
 806087a:	c6 00 30             	movb   $0x30,(%eax)
 806087d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060880:	83 c0 01             	add    $0x1,%eax
 8060883:	89 45 08             	mov    %eax,0x8(%ebp)
 8060886:	8b 45 08             	mov    0x8(%ebp),%eax
 8060889:	c6 00 78             	movb   $0x78,(%eax)
 806088c:	8b 45 08             	mov    0x8(%ebp),%eax
 806088f:	83 c0 01             	add    $0x1,%eax
 8060892:	89 45 08             	mov    %eax,0x8(%ebp)
 8060895:	83 ec 04             	sub    $0x4,%esp
 8060898:	6a 10                	push   $0x10
 806089a:	8d 45 08             	lea    0x8(%ebp),%eax
 806089d:	50                   	push   %eax
 806089e:	ff 75 dc             	push   -0x24(%ebp)
 80608a1:	e8 a3 fe ff ff       	call   8060749 <itoa>
 80608a6:	83 c4 10             	add    $0x10,%esp
 80608a9:	e9 f4 00 00 00       	jmp    80609a2 <vfprintf+0x1c2>
 80608ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80608b1:	0f b6 00             	movzbl (%eax),%eax
 80608b4:	3c 62                	cmp    $0x62,%al
 80608b6:	75 45                	jne    80608fd <vfprintf+0x11d>
 80608b8:	8b 45 10             	mov    0x10(%ebp),%eax
 80608bb:	8d 50 04             	lea    0x4(%eax),%edx
 80608be:	89 55 10             	mov    %edx,0x10(%ebp)
 80608c1:	8b 00                	mov    (%eax),%eax
 80608c3:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80608c6:	8b 45 08             	mov    0x8(%ebp),%eax
 80608c9:	c6 00 30             	movb   $0x30,(%eax)
 80608cc:	8b 45 08             	mov    0x8(%ebp),%eax
 80608cf:	83 c0 01             	add    $0x1,%eax
 80608d2:	89 45 08             	mov    %eax,0x8(%ebp)
 80608d5:	8b 45 08             	mov    0x8(%ebp),%eax
 80608d8:	c6 00 62             	movb   $0x62,(%eax)
 80608db:	8b 45 08             	mov    0x8(%ebp),%eax
 80608de:	83 c0 01             	add    $0x1,%eax
 80608e1:	89 45 08             	mov    %eax,0x8(%ebp)
 80608e4:	83 ec 04             	sub    $0x4,%esp
 80608e7:	6a 02                	push   $0x2
 80608e9:	8d 45 08             	lea    0x8(%ebp),%eax
 80608ec:	50                   	push   %eax
 80608ed:	ff 75 e0             	push   -0x20(%ebp)
 80608f0:	e8 54 fe ff ff       	call   8060749 <itoa>
 80608f5:	83 c4 10             	add    $0x10,%esp
 80608f8:	e9 a5 00 00 00       	jmp    80609a2 <vfprintf+0x1c2>
 80608fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060900:	0f b6 00             	movzbl (%eax),%eax
 8060903:	3c 6f                	cmp    $0x6f,%al
 8060905:	75 33                	jne    806093a <vfprintf+0x15a>
 8060907:	8b 45 10             	mov    0x10(%ebp),%eax
 806090a:	8d 50 04             	lea    0x4(%eax),%edx
 806090d:	89 55 10             	mov    %edx,0x10(%ebp)
 8060910:	8b 00                	mov    (%eax),%eax
 8060912:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060915:	8b 45 08             	mov    0x8(%ebp),%eax
 8060918:	c6 00 30             	movb   $0x30,(%eax)
 806091b:	8b 45 08             	mov    0x8(%ebp),%eax
 806091e:	83 c0 01             	add    $0x1,%eax
 8060921:	89 45 08             	mov    %eax,0x8(%ebp)
 8060924:	83 ec 04             	sub    $0x4,%esp
 8060927:	6a 08                	push   $0x8
 8060929:	8d 45 08             	lea    0x8(%ebp),%eax
 806092c:	50                   	push   %eax
 806092d:	ff 75 e4             	push   -0x1c(%ebp)
 8060930:	e8 14 fe ff ff       	call   8060749 <itoa>
 8060935:	83 c4 10             	add    $0x10,%esp
 8060938:	eb 68                	jmp    80609a2 <vfprintf+0x1c2>
 806093a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806093d:	0f b6 00             	movzbl (%eax),%eax
 8060940:	3c 73                	cmp    $0x73,%al
 8060942:	75 25                	jne    8060969 <vfprintf+0x189>
 8060944:	8b 45 10             	mov    0x10(%ebp),%eax
 8060947:	8d 50 04             	lea    0x4(%eax),%edx
 806094a:	89 55 10             	mov    %edx,0x10(%ebp)
 806094d:	8b 00                	mov    (%eax),%eax
 806094f:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8060952:	8b 45 08             	mov    0x8(%ebp),%eax
 8060955:	83 ec 08             	sub    $0x8,%esp
 8060958:	ff 75 e8             	push   -0x18(%ebp)
 806095b:	50                   	push   %eax
 806095c:	e8 b1 fa ff ff       	call   8060412 <strcpy>
 8060961:	83 c4 10             	add    $0x10,%esp
 8060964:	89 45 08             	mov    %eax,0x8(%ebp)
 8060967:	eb 39                	jmp    80609a2 <vfprintf+0x1c2>
 8060969:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806096c:	0f b6 00             	movzbl (%eax),%eax
 806096f:	3c 63                	cmp    $0x63,%al
 8060971:	75 2f                	jne    80609a2 <vfprintf+0x1c2>
 8060973:	8b 45 10             	mov    0x10(%ebp),%eax
 8060976:	8d 50 04             	lea    0x4(%eax),%edx
 8060979:	89 55 10             	mov    %edx,0x10(%ebp)
 806097c:	8b 10                	mov    (%eax),%edx
 806097e:	8b 45 08             	mov    0x8(%ebp),%eax
 8060981:	88 10                	mov    %dl,(%eax)
 8060983:	8b 45 08             	mov    0x8(%ebp),%eax
 8060986:	83 c0 01             	add    $0x1,%eax
 8060989:	89 45 08             	mov    %eax,0x8(%ebp)
 806098c:	eb 14                	jmp    80609a2 <vfprintf+0x1c2>
 806098e:	8b 45 08             	mov    0x8(%ebp),%eax
 8060991:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8060994:	0f b6 12             	movzbl (%edx),%edx
 8060997:	88 10                	mov    %dl,(%eax)
 8060999:	8b 45 08             	mov    0x8(%ebp),%eax
 806099c:	83 c0 01             	add    $0x1,%eax
 806099f:	89 45 08             	mov    %eax,0x8(%ebp)
 80609a2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80609a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80609a9:	0f b6 00             	movzbl (%eax),%eax
 80609ac:	84 c0                	test   %al,%al
 80609ae:	0f 85 4f fe ff ff    	jne    8060803 <vfprintf+0x23>
 80609b4:	8b 45 08             	mov    0x8(%ebp),%eax
 80609b7:	c6 00 00             	movb   $0x0,(%eax)
 80609ba:	83 ec 0c             	sub    $0xc,%esp
 80609bd:	ff 75 ec             	push   -0x14(%ebp)
 80609c0:	e8 1d fa ff ff       	call   80603e2 <strlen>
 80609c5:	83 c4 10             	add    $0x10,%esp
 80609c8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80609cb:	c9                   	leave
 80609cc:	c3                   	ret

080609cd <printf>:
 80609cd:	55                   	push   %ebp
 80609ce:	89 e5                	mov    %esp,%ebp
 80609d0:	53                   	push   %ebx
 80609d1:	81 ec 14 04 00 00    	sub    $0x414,%esp
 80609d7:	e8 b5 f6 ff ff       	call   8060091 <__x86.get_pc_thunk.bx>
 80609dc:	81 c3 18 26 00 00    	add    $0x2618,%ebx
 80609e2:	8d 45 0c             	lea    0xc(%ebp),%eax
 80609e5:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80609e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80609eb:	83 ec 04             	sub    $0x4,%esp
 80609ee:	50                   	push   %eax
 80609ef:	ff 75 08             	push   0x8(%ebp)
 80609f2:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 80609f8:	50                   	push   %eax
 80609f9:	e8 e2 fd ff ff       	call   80607e0 <vfprintf>
 80609fe:	83 c4 10             	add    $0x10,%esp
 8060a01:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060a04:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060a07:	83 ec 04             	sub    $0x4,%esp
 8060a0a:	50                   	push   %eax
 8060a0b:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 8060a11:	50                   	push   %eax
 8060a12:	6a 00                	push   $0x0
 8060a14:	e8 2b f7 ff ff       	call   8060144 <write>
 8060a19:	83 c4 10             	add    $0x10,%esp
 8060a1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060a1f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8060a22:	c9                   	leave
 8060a23:	c3                   	ret

08060a24 <sprintf>:
 8060a24:	55                   	push   %ebp
 8060a25:	89 e5                	mov    %esp,%ebp
 8060a27:	83 ec 18             	sub    $0x18,%esp
 8060a2a:	e8 af f9 ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 8060a2f:	05 c5 25 00 00       	add    $0x25c5,%eax
 8060a34:	8d 45 10             	lea    0x10(%ebp),%eax
 8060a37:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060a3a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060a3d:	83 ec 04             	sub    $0x4,%esp
 8060a40:	50                   	push   %eax
 8060a41:	ff 75 0c             	push   0xc(%ebp)
 8060a44:	ff 75 08             	push   0x8(%ebp)
 8060a47:	e8 94 fd ff ff       	call   80607e0 <vfprintf>
 8060a4c:	83 c4 10             	add    $0x10,%esp
 8060a4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060a52:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8060a55:	c9                   	leave
 8060a56:	c3                   	ret

08060a57 <getchar>:
 8060a57:	55                   	push   %ebp
 8060a58:	89 e5                	mov    %esp,%ebp
 8060a5a:	53                   	push   %ebx
 8060a5b:	83 ec 14             	sub    $0x14,%esp
 8060a5e:	e8 7b f9 ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 8060a63:	05 91 25 00 00       	add    $0x2591,%eax
 8060a68:	83 ec 04             	sub    $0x4,%esp
 8060a6b:	6a 01                	push   $0x1
 8060a6d:	8d 55 f7             	lea    -0x9(%ebp),%edx
 8060a70:	52                   	push   %edx
 8060a71:	6a 01                	push   $0x1
 8060a73:	89 c3                	mov    %eax,%ebx
 8060a75:	e8 ef f6 ff ff       	call   8060169 <read>
 8060a7a:	83 c4 10             	add    $0x10,%esp
 8060a7d:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
 8060a81:	0f be c0             	movsbl %al,%eax
 8060a84:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8060a87:	c9                   	leave
 8060a88:	c3                   	ret

08060a89 <putchar>:
 8060a89:	55                   	push   %ebp
 8060a8a:	89 e5                	mov    %esp,%ebp
 8060a8c:	53                   	push   %ebx
 8060a8d:	83 ec 14             	sub    $0x14,%esp
 8060a90:	e8 49 f9 ff ff       	call   80603de <__x86.get_pc_thunk.ax>
 8060a95:	05 5f 25 00 00       	add    $0x255f,%eax
 8060a9a:	8b 55 08             	mov    0x8(%ebp),%edx
 8060a9d:	88 55 f7             	mov    %dl,-0x9(%ebp)
 8060aa0:	83 ec 04             	sub    $0x4,%esp
 8060aa3:	6a 01                	push   $0x1
 8060aa5:	8d 55 f7             	lea    -0x9(%ebp),%edx
 8060aa8:	52                   	push   %edx
 8060aa9:	6a 00                	push   $0x0
 8060aab:	89 c3                	mov    %eax,%ebx
 8060aad:	e8 92 f6 ff ff       	call   8060144 <write>
 8060ab2:	83 c4 10             	add    $0x10,%esp
 8060ab5:	90                   	nop
 8060ab6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8060ab9:	c9                   	leave
 8060aba:	c3                   	ret
